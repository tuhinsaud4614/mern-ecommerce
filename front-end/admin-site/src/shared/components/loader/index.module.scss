@import "../../../styles/mixins";

.RotatePlane {
  width: 40px;
  height: 40px;
  display: inline-block;
  animation: AnimateRotatePlane 1.2s infinite ease-in-out;

  @include frames(AnimateRotatePlane) {
    0% {
      transform: perspective(120px);
    }
    50% {
      transform: perspective(120px) rotateY(180deg);
    }
    100% {
      transform: perspective(120px) rotateY(180deg) rotateX(180deg);
    }
  }
}

.Chase {
  display: inline-block;
  width: 40px;
  height: 40px;
  position: relative;
  animation: AnimateChase 2.5s infinite linear both;

  @include frames(AnimateChase) {
    100% {
      transform: rotate(360deg);
    }
  }

  @at-root #{&}Dot {
    width: 100%;
    height: 100%;
    position: absolute;
    left: 0;
    top: 0;
    animation: AnimateChaseDot 2s infinite ease-in-out both;

    @include frames(AnimateChaseDot) {
      80%,
      100% {
        transform: rotate(360deg);
      }
    }

    @at-root #{&}Before {
      display: block;
      width: 25%;
      height: 25%;
      border-radius: 100%;
      animation: AnimateChaseDotBefore 2s infinite ease-in-out both;
      @include frames(AnimateChaseDotBefore) {
        50% {
          transform: scale(0.4);
        }
        100%,
        0% {
          transform: scale(1);
        }
      }
    }
    @for $i from 1 through 6 {
      $temp: -1.2;
      @at-root &:nth-child(#{$i}),
        &:nth-child(#{$i}) > #{&}Before {
        animation-delay: #{$temp + ($i / 10)}s;
      }
    }
  }
}

.Bounce {
  width: 40px;
  height: 40px;
  position: relative;
  display: inline-block;
  @at-root #{&}1,
    #{&}2 {
    display: inline-block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    opacity: 0.6;
    position: absolute;
    top: 0;
    left: 0;
    animation: AnimateBounce 2s infinite ease-in-out;
  }

  @include frames(AnimateBounce) {
    0%,
    100% {
      transform: scale(0);
    }
    50% {
      transform: scale(1);
    }
  }

  #{&}1 {
    animation-delay: -1s;
  }
}

.RectContainer {
  display: inline-block;
  width: 50px;
  height: 50px;
  text-align: center;
  font-size: 1.6rem;
}

.Rect {
  height: 100%;
  width: 6px;
  display: inline-block;
  animation: AnimateStretch 1.2s infinite ease-in-out;
  &:not(:last-child) {
    margin-right: 3px;
  }

  @include frames(AnimateStretch) {
    0%,
    40%,
    100% {
      transform: scaleY(0.4);
    }
    20% {
      transform: scaleY(1);
    }
  }
  $temp: -1.2;
  @for $i from 2 through 5 {
    @at-root #{&}#{$i} {
      animation-delay: #{$temp + (($i - 1) / 10)}s;
    }
  }
}

.CubeGrid {
  width: 40px;
  height: 40px;
  display: inline-block;
}
.Cube {
  width: 33%;
  height: 33%;
  float: left;
  animation: AnimateCubeScale 1.3s infinite ease-in-out;

  @include frames(AnimateCubeScale) {
    0%,
    70%,
    100% {
      transform: scale3D(1, 1, 1);
    }
    35% {
      transform: scale3D(0, 0, 1);
    }
  }

  @for $i from 1 through 9 {
    @at-root #{&}#{$i} {
      @if $i <= 3 {
        animation-delay: #{($i / 10) + 0.1}s;
      } @else if $i <=6 {
        animation-delay: #{($i / 10) - 0.3}s;
      } @else {
        animation-delay: #{($i / 10) - 0.7}s;
      }
    }
  }
}

.FoldingCubeGrid {
  display: inline-block;
  width: 40px;
  height: 40px;
  position: relative;
  transform: rotateZ(45deg);
}

.FoldingCube {
  float: left;
  width: 50%;
  height: 50%;
  position: relative;
  transform: scale(1.1);

  @at-root #{&}Before {
    display: inline-block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    animation: AnimateFoldCube 2.4s infinite linear both;
    transform-origin: 100% 100%;
    @include frames(AnimateFoldCube) {
      0%,
      10% {
        transform: perspective(140px) rotateX(-180deg);
        opacity: 0;
      }
      25%,
      75% {
        transform: perspective(140px) rotateX(0deg);
        opacity: 1;
      }
      90%,
      100% {
        transform: perspective(140px) rotateY(180deg);
        opacity: 0;
      }
    }
  }
  @for $i from 2 through 4 {
    @at-root #{&}#{$i} {
      transform: scale(1.1) rotateZ(#{90 * ($i - 1)}deg);
    }
    @at-root #{&}Before#{$i} {
      animation-delay: #{(($i - 1) * 3) / 10}s;
    }
  }
}
